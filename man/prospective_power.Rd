% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{prospective_power}
\alias{prospective_power}
\title{Given a test market, analyze the impact of fake interventions (prospective power analysis)}
\usage{
prospective_power(matched_markets=NULL,
          bsts_modelargs=NULL,
          test_market=NULL,
          end_fake_post_period=NULL,
          alpha=0.05,
          prior_level_sd=0.01,
          control_matches=5, 
          nseasons=NULL, 
          max_fake_lift=NULL, 
          parallel=FALSE,
          steps=10)
}
\arguments{
\item{matched_markets}{A matched_market object created by the market_matching function}

\item{bsts_modelargs}{A list() that passes model parameters directly to bsts -- such as list(niter = 1000, nseasons = 52, prior.level.sd=0.1)
This parameter will overwrite the values specified in prior_level_sd and nseasons. ONLY use this if you're using intricate bsts settings
For most use-cases, using the prior_level_sd and nseasons parameters should be sufficient}

\item{test_market}{The name of the test market (character)}

\item{end_fake_post_period}{The end date of the post period. Must be a character of format "YYYY-MM-DD" -- e.g., "2015-11-01"}

\item{alpha}{Desired tail-area probability for posterior intervals. For example, 0.05 yields 0.95 intervals}

\item{prior_level_sd}{Prior SD for the local level term (Gaussian random walk). Default is 0.01. The bigger this number is, the more wiggliness is allowed for the local level term.
Note that more wiggly local level terms also translate into larger posterior intervals
This parameter will be overwritten if you're using the bsts_modelargs parameter}

\item{control_matches}{Number of matching control markets to use in the analysis (default is 5)}

\item{nseasons}{Seasonality for the bsts model -- e.g., 52 for weekly seasonality}

\item{max_fake_lift}{The maximum fake lift -- e.g., 0.1 means that the minimum lift evaluated is approximately 10%
Note that randomization is injected into the lift, which means that the max lift will not be exactly as specified}

\item{parallel}{set to TRUE for faster execution (default is FALSE)}

\item{steps}{The number of steps used to calculate the power curve (default is 10)}
}
\value{
Returns an object of type \code{matched_market_power}. The object has the
following elements:
\item{\code{ResultsData}}{The results stored in a data.frame}
\item{\code{ResultsGraph}}{The results stored in a ggplot graph}
\item{\code{LiftPattern}}{The random pattern applied to the lift}
}
\description{
\code{prospective_power} Analyzes the causal impact of a fake intervention using the CausalImpact package, given a test market and a matched_market object from the best_matches function.
The function returns an object of type "market_inference" which contains the estimated impact of the intervention (absolute and relative).
}
\examples{
library(MarketMatching)
##-----------------------------------------------------------------------
## Create a power curve for various levels of lift
## Since this is weather data it is a not a very meaningful example. 
## This is merely to demonstrate the function.
##-----------------------------------------------------------------------
data(weather, package="MarketMatching")
mm <- best_matches(data=weather, 
                   id="Area",
                   markets_to_be_matched=c("CPH", "SFO"),
                   date_variable="Date",
                   matching_variable="Mean_TemperatureF",
                   parallel=FALSE,
                   warping_limit=1, # warping limit=1
                   dtw_emphasis=1, # rely only on dtw for pre-screening
                   matches=5, # request 5 matches
                   start_match_period="2014-01-01",
                   end_match_period="2014-10-01")
library(CausalImpact)
results <- prospective_power(matched_markets=mm,
                     test_market="CPH",
                     parallel=FALSE,
                     control_matches=5, # use all 5 matches for inference
                     end_fake_post_period="2015-12-15",
                     prior_level_sd=0.002, 
                     max_fake_lift=0.1)
}
